package FrutasRibera;

import java.io.File;
import java.io.FileNotFoundException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;

import zzzExamen2.Empleado;
import zzzExamen2.Pedido;

public class Cliente extends Persona {

	public String metodoPago;
	public ArrayList<Pedido> historicoPedidos;

	public String getMetodoPago() {
		return metodoPago;
	}

	public void setMetodoPago(String metodoPago) {
		this.metodoPago = metodoPago;
	}

	public ArrayList<Pedido> getPedidosAsignados() {
		return historicoPedidos;
	}

	public void setPedidosAsignados(ArrayList<Pedido> historicoPedidos) {
		this.historicoPedidos = historicoPedidos;
	}

	public Cliente(String dni, String nombre, String apellidos, String direccion, String metodoPago) {
		super(dni, nombre, apellidos, direccion);
		this.metodoPago = metodoPago;
		this.historicoPedidos = new ArrayList<>();
	}

	public Cliente() {
		super();
		this.metodoPago = "";
		this.historicoPedidos = new ArrayList<>();

	}

	@Override
	public String toString() {
		return "Cliente [metodoPago=" + metodoPago + ", historicoPedidos=" + historicoPedidos + "]";
	}

	public void asignarmetodoPago(String fichero) {
		File ficherocsv = new File("metodoPagoCliente.csv");

		try {
			String cadena;
			String[] trozo;
			Scanner entrada = entrada = new Scanner(ficherocsv);
			entrada.nextLine();

			Pedido p = new Pedido();
			while (entrada.hasNext()) {
				cadena = entrada.nextLine();
				trozo = cadena.split(";");
				if (trozo[0].equals(this.dni)) {
					this.metodoPago = trozo[1];
				}
			}

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public ArrayList<Cliente> cargaHistorico(String fichero) {
		ArrayList<Cliente> clientepedido = new ArrayList<>();
		File ficherocsv2 = new File("Pedidos2022.csv");

		try {
			ResultSet rset = this.consultaBD("select * from persona where turno<>0");
			while (rset.next()) {
				misempleados.add(new Empleado((rset.getString(1)), rset.getString(2), rset.getString(3),
						rset.getString(4), Integer.parseInt(rset.getString(5))));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return misempleados;
	}

	public void asignarPedidosTurno(String fichero) {
		File ficherocsv = new File("Pedidos.csv");

		try {
			String cadena;
			String[] trozo;
			Scanner entrada = entrada = new Scanner(ficherocsv);
			entrada.nextLine();
//			Factura f = new Factura();
			Pedido p = new Pedido();
			while (entrada.hasNext()) {
				cadena = entrada.nextLine();
				trozo = cadena.split(";");
				if (Integer.parseInt(trozo[3]) == this.turno) {
					this.pedidosAsignados.add(new Pedido(Integer.parseInt(trozo[0]), trozo[1],
							Double.parseDouble(trozo[2]), Integer.parseInt(trozo[3])));
				}

			}

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
//	public static void main(String[] args) {
//		Cliente cliente = new Cliente();
//		cliente.setDni("11111111H");
//		cliente.asignarmetodoPago("metodoPagoCliente.csv");
//		System.out.println(cliente.toString());
//	}
}
