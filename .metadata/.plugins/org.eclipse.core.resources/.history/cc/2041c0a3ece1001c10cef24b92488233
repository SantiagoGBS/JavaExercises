package InfoRibera;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class App {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		if (args.length != 0) {
			if (args[0].contains("--profesor")) {
				String[] linea;
				int codigoprofe;
				BD bbdd = BD.getInstance();
				String nombreprofesor = "";
				String apellido = "";
				String codigoasignatura = "";
				String nombreasignatura = "";
				int horas = 0;
				bbdd.cargarParametrosConexion();
				linea = args[0].split("=");
				// linea0 es lo anterior al = del split y lo posterior es el codigo
				codigoprofe = Integer.parseInt(linea[1]);
				try {
					ResultSet rset2 = bbdd
							.consultaBD("select nombre, apellidos from personas where codigo=" + codigoprofe);
					while (rset2.next()) {
						nombreprofesor = rset2.getString(1);
						apellido = rset2.getString(2);

					}
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				try {
					int horasdocencia = 0;
					ResultSet rset = bbdd.consultaBD(
							"select codigo, nombre, numhoras from modulos where cod_profesor= " + codigoprofe);
					System.out.println("Módulos que imparte el profesor " + nombreprofesor + " " + apellido);
					while (rset.next()) {
						System.out.println(rset.getString(1) + " - " + rset.getString(2));
						horas += Integer.parseInt(rset.getString(3));

					}
					System.out.println("Horas de docencia:" + " " + horas);
					rset.close();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					System.out.println("Profesor inexistente");
				}
			}
			if (args[0].contains("–fichero-notas=")) {
				String[] cadena = args[0].split("=");
				String archivo = cadena[1];
				BD bbdd = BD.getInstance();
				bbdd.cargarParametrosConexion();
				bbdd.cargaNotas(archivo);

			}
			if (args[0].contains("--alumno=")) {
				String[] cadena = args[0].split("=");
				int n = 0;
				int total = 0;
				boolean encontrado = false;
				ResultSet rset;
				BD bbdd = BD.getInstance();
				bbdd.cargarParametrosConexion();
				ArrayList<Alumno> alumnos = bbdd.cargaAlumnos();
				while (!encontrado && n < alumnos.size()) {
					int id = Integer.parseInt(cadena[1]);
					if (alumnos.get(n).getCodigo() == id) {
						encontrado = true;
					} else {
						n++;
					}
				}
				if (!encontrado) {
					System.out.println("Alumno inexistente");
				} else {
					try {
						rset = bbdd.consultaBD(
								"select n.nota_final, m.nombre from notas n join modulos m on n.cod_modulo=m.codigo where n.cod_alumno="
										+ alumnos.get(n).getCodigo() + " order by m.nombre desc");
						System.out.println(
								"Notas del alumno " + alumnos.get(n).getNombre() + " " + alumnos.get(n).getApellidos());
						while (rset.next()) {
							System.out.println(String.format("%05.2f", Float.parseFloat(rset.getString(1))) + " - "
									+ rset.getString(2));
						}
						System.out
								.println("Nota media " + String.format("%05.2f", alumnos.get(n).getMediaExpediente()));
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
			if (args[0].contains("informe-notas")) {
				float total = 0;
				int alum = 0;
				BD bbdd = BD.getInstance();
				bbdd.cargarParametrosConexion();
				try {
					ResultSet rset = bbdd.consultaBD("select NOMBRE ,APELLIDOS,nvl(media,0) from"
							+ "(select cod_alumno,avg(nota_final) as media from notas group by cod_alumno)"
							+ " right join personas on personas.codigo=cod_alumno where personas.titulacion is null order by media desc");
					System.out.println("Notas medias");
					while (rset.next()) {
						if (Float.parseFloat(rset.getString(3)) != 0) {
							System.out.println(String.format("%05.2f", Float.parseFloat(rset.getString(3))) + " - "
									+ rset.getString(1) + " " + rset.getString(2));
							total += Float.parseFloat(rset.getString(3));
							alum++;
						}
//						
					}
					System.out.println(
							"Nota media de todos los alumnos " + String.format("%05.2f", (float) total / alum));
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}
		} else {
			System.out.println("sin parametros");
		}
	}

}
